{"version":3,"sources":["components/OpeningSplash/OpeningSplash.css","components/Logo/Logo.css","App.css","components/Splash/Splash.css","components/Navigation/Navigation.css","hoc/Auxilliary.js","components/Splash/Splash.js","components/Logo/Logo.js","components/Navigation/Navigation.js","components/OpeningSplash/OpeningSplash.js","containers/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","OpeningSplash","BlackBackground","drawerOpen","Container","Logo","grow","Name","Bubble","pop-hi","App","Splash","NavigationItems","pop-down","pop-up","Auxilliary","props","children","state","react_default","a","createElement","className","classes","style","backgroundColor","this","boja","Component","WOW","init","hoc_Auxilliary","Title","Navigation","onClick","choiceHandler","components_Logo_Logo","components_Navigation_Navigation","Main","handleChoice","i","_this","scrollIntoView","block","behavior","_this2","components_Splash_Splash","components_OpeningSplash_OpeningSplash","ref","el","containers_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e17dbf0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"OpeningSplash\":\"_1TjSLYY7P4ICSYyizumB9n\",\"BlackBackground\":\"_32zq_sn9qLLj3-FsyPoqCD\",\"drawerOpen\":\"_2GsIhcdIQpxsG2dVlKAbMq\",\"Container\":\"_1DLpRnJ33ViX9xEJH1U-pV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"_2A07ezOaAdOyIq0VAf8F9m\",\"grow\":\"_2Cawq36EjwjiFMugsIhNtU\",\"Name\":\"_2y3b1I9m3H-f2A_7JQMsh3\",\"Bubble\":\"_34obfgAkXC-wWVWJ_YNwtq\",\"pop-hi\":\"_2Ip0wGZBhrgiNJpOKmkK4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"_3Ge-CIdMbROGJFA06DTnds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Splash\":\"_1_Od8U9-6D66tyllBpFiiV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"_255VebsEmHEGkzyqDlRNit\",\"pop-down\":\"_1owXvpBLQN3ki5nt91Qzhz\",\"pop-up\":\"_2kHoK7pAsQ9z1VFi3RPvgO\"};","const Auxilliary = (props) => props.children;\r\n\r\nexport default Auxilliary;","import React, {Component} from 'react';\r\nimport classes from './Splash.css';\r\n\r\nclass Splash extends Component {\r\n\r\n    state = {}\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div\r\n                className={classes.Splash}\r\n                style={{\r\n                backgroundColor: this.props.boja,\r\n            }}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Splash;","import React, {Component} from 'react';\r\nimport classes from './Logo.css';\r\nimport Auxilliary from '../../hoc/Auxilliary';\r\nimport WOW from 'wowjs';\r\n\r\nclass Logo extends Component {\r\n\r\n    componentDidMount() {\r\n        new WOW.WOW().init();\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        //const hiClasses = [classes.Bubble, 'wow', 'zoomIn']\r\n\r\n\r\n        return (\r\n            <Auxilliary>\r\n                <div className={classes.Logo}>\r\n                    <div className={classes.Name}>\r\n                        Daniel Ilievski\r\n                    </div>\r\n                    <div className={classes.Title}>\r\n                        Web Developer and Graphic Designer\r\n                    </div>\r\n                </div>\r\n                {/*<div className={hiClasses.join(\" \")} data-wow-duration=\"1s\" data-wow-delay=\"3s\">Hi!</div>*/}\r\n            </Auxilliary>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\n//import Logo from '../Logo/Logo';\r\nimport classes from './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <ul className={classes.NavigationItems}>\r\n            <li onClick={() => props.choiceHandler(2)}>SERVICES</li>\r\n            <li onClick={() => props.choiceHandler(3)}>PROJECTS</li>\r\n            <li onClick={() => props.choiceHandler(4)}>ABOUT</li>\r\n            <li onClick={() => props.choiceHandler(5)}>CONTACT</li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React, {Component} from 'react';\r\nimport classes from './OpeningSplash.css';\r\nimport Logo from '../Logo/Logo';\r\n//import Auxilliary from '../../hoc/Auxilliary';\r\nimport Navigation from '../Navigation/Navigation';\r\n\r\nclass OpeningSplash extends Component {\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Container}>\r\n                <div className={classes.OpeningSplash}>\r\n                    <Logo/>\r\n                </div>\r\n                <div className={classes.BlackBackground}>\r\n                    <Navigation choiceHandler={this.props.choiceHandler}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OpeningSplash;","import React, { Component } from 'react';\r\nimport Auxilliary from '../hoc/Auxilliary';\r\nimport Splash from '../components/Splash/Splash';\r\n//import Navigation from '../components/Navigation/Navigation';\r\nimport OpeningSplash from '../components/OpeningSplash/OpeningSplash';\r\n\r\nclass Main extends Component {\r\n\r\n    handleChoice = (i) => {\r\n        this[\"section-\"+i].scrollIntoView({block: 'end', behavior: 'smooth'});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Auxilliary>\r\n                <Splash>\r\n                    <OpeningSplash choiceHandler={this.handleChoice}/>\r\n                </Splash>\r\n                <div ref={el => this[\"section-2\"] = el}>\r\n                    <Splash boja=\"black\"/>\r\n                </div>\r\n                <div ref={el => this[\"section-3\"] = el}>\r\n                    <Splash boja=\"white\"/>\r\n                </div>\r\n                <div ref={el => this[\"section-4\"] = el}>\r\n                    <Splash boja=\"black\"/>\r\n                </div>\r\n                <div ref={el => this[\"section-5\"] = el}>\r\n                    <Splash boja=\"white\"/>\r\n                </div>\r\n            </Auxilliary>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, {Component} from 'react';\nimport classes from './App.css';\nimport Main from './containers/Main';\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div className={classes.App}>\n        <Main/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}